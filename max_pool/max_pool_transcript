# //  Questa Sim-64
# //  Version 2024.2 linux_x86_64 May 20 2024
# //
# // Unpublished work. Copyright 2024 Siemens
# //
# // This material contains trade secrets or otherwise confidential information
# // owned by Siemens Industry Software Inc. or its affiliates (collectively,
# // "SISW"), or its licensors. Access to and use of this information is strictly
# // limited as set forth in the Customer's applicable agreements with SISW.
# //
# // This material may not be copied, distributed, or otherwise disclosed outside
# // of the Customer's facilities without the express written permission of SISW,
# // and may not be used in any way not expressly authorized by SISW.
# //
# Loading project max_pool
# Compile of max_pool.sv was successful with warnings.
# Compile of max_pool.sv was successful.
# Compile of dense.sv was successful.
vlog +acc max_pool.sv max_pool_tb.sv
# QuestaSim-64 vlog 2024.2 Compiler 2024.05 May 20 2024
# Start time: 14:22:02 on Dec 06,2024
# vlog -reportprogress 300 "+acc" max_pool.sv max_pool_tb.sv 
# ** Warning: max_pool.sv(1): (vlog-13233) Design unit "max_pool_sv_unit" already exists and will be overwritten. Overwriting SystemVerilog $unit with different source files.
# -- Compiling package max_pool_sv_unit
# -- Importing package mnist_pkg
# -- Compiling module max_pool
# -- Compiling package max_pool_tb_sv_unit
# -- Compiling module max_pool_tb
# 
# Top level modules:
# 	max_pool_tb
# End time: 14:22:03 on Dec 06,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 1
vsim max_pool_tb
# vsim max_pool_tb 
# Start time: 14:22:17 on Dec 06,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility. The +acc switch would be deprecated in a future release.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading sv_std.std
# Loading work.mnist_pkg(fast)
# Loading work.interface_sv_unit(fast)
# Loading work.max_pool_tb_sv_unit(fast)
# Loading work.max_pool_tb(fast)
# Loading work.max_pool_sv_unit(fast)
# Loading work.max_pool(fast)
run 1 ms
# TB: Input image and expected output loaded.
# TB: Reset deasserted
# TB: Sent input image[0][0] = 8
# TB: Sent input image[0][1] = 1
# TB: Sent input image[0][2] = 5
# TB: Sent input image[0][3] = 3
# TB: Sent input image[0][4] = 7
# TB: Sent input image[0][5] = 4
# TB: Sent input image[1][0] = 6
# TB: Sent input image[1][1] = 7
# TB: Sent input image[1][2] = 2
# TB: Sent input image[1][3] = 4
# TB: Sent input image[1][4] = 9
# TB: Sent input image[1][5] = 0
# TB: Sent input image[2][0] = 9
# TB: Sent input image[2][1] = 0
# TB: Sent input image[2][2] = 3
# TB: Sent input image[2][3] = 2
# TB: Sent input image[2][4] = 1
# TB: Sent input image[2][5] = 5
# TB: Sent input image[3][0] = 1
# TB: Sent input image[3][1] = 5
# TB: Sent input image[3][2] = 6
# TB: Sent input image[3][3] = 8
# TB: Sent input image[3][4] = 2
# TB: Sent input image[3][5] = 7
# TB: Sent input image[4][0] = 4
# TB: Sent input image[4][1] = 3
# TB: Sent input image[4][2] = 8
# TB: Sent input image[4][3] = 1
# TB: Sent input image[4][4] = 9
# TB: Sent input image[4][5] = 6
# TB: Sent input image[5][0] = 2
# TB: Sent input image[5][1] = 7
# TB: Sent input image[5][2] = 5
# TB: Sent input image[5][3] = 3
# TB: Sent input image[5][4] = 4
# TB: Sent input image[5][5] = 8
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Waiting for DUT to provide valid output
# TB: Captured output image_out = [0][0]     8
# TB: Captured output image_out = [0][1]     5
# TB: Captured output image_out = [0][2]     9
# TB: Captured output image_out = [1][0]     9
# TB: Captured output image_out = [1][1]     8
# TB: Captured output image_out = [1][2]     7
# TB: Captured output image_out = [2][0]     7
# TB: Captured output image_out = [2][1]     8
# TB: Captured output image_out = [2][2]     9
# TB: Test Passed!
# TB: Input Image:
#   8   1   5   3   7   4 
#   6   7   2   4   9   0 
#   9   0   3   2   1   5 
#   1   5   6   8   2   7 
#   4   3   8   1   9   6 
#   2   7   5   3   4   8 
# TB: Expected Output:
#   8   5   9 
#   9   8   7 
#   7   8   9 
# TB: DUT Output:
#   8   5   9 
#   9   8   7 
#   7   8   9 
# ** Note: $finish    : max_pool_tb.sv(146)
#    Time: 565 ns  Iteration: 1  Instance: /max_pool_tb
# 1
# Break in Module max_pool_tb at max_pool_tb.sv line 146
quit -sim
# End time: 14:22:48 on Dec 06,2024, Elapsed time: 0:00:31
# Errors: 0, Warnings: 5
